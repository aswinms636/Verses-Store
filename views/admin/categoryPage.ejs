<%- include("../../views/partials/admin/header") %>

<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
  <style>
    .col-md-3 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }
  </style>
</head>

<body>
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title card-title">Category</h2>
    </div>

    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" onsubmit="handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required />
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create category</button>
              </div>
            </form>
          </div>

          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>Action</th>
                    <th>Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.forEach((category) => { %>
                    <tr>
                      <td class="text-start"><%= category.name %></td>
                      <td class="text-start"><%= category.description %></td>
                      <td>
                        <% if (category.categoryOffer) { %>
                          <%= category.categoryOffer %>%
                        <% } else { %>
                          0%
                        <% } %>
                      </td>
                      <td class="text-start">
                        <form onsubmit="addCategoryOffer(event, '<%= category._id %>')">
                          <input type="number" name="percentage" placeholder="Offer %" class="form-control" required />
                          <button type="submit" class="btn btn-primary btn-sm mt-2">Add Offer</button>
                        </form>
                        <% if (category.categoryOffer) { %>
                          <button class="btn btn-danger btn-sm mt-2" onclick="removeCategoryOffer('<%= category._id %>')">Remove Offer</button>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.categoryOffer) { %>
                          <button class="btn btn-danger" style="width: 70px" onclick="toggleCategory('<%=category._id %>', 'listCategory')">
                            Unlist
                          </button>
                        <% } else { %>
                          <button class="btn btn-success" style="width: 70px" onclick="toggleCategory('<%=category._id %>', 'unlistCategory')">
                            List
                          </button>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <% if (category.isListed) { %>
                          <span class="badge rounded-pill alert-success">Listed</span>
                        <% } else { %>
                          <span class="badge rounded-pill alert-danger">Unlisted</span>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.isListed) { %>
                          <button class="btn btn-danger" style="width: 70px" onclick="toggleCategory('<%=category._id %>', 'listCategory')">
                            Unlist
                          </button>
                        <% } else { %>
                          <button class="btn btn-success" style="width: 70px" onclick="toggleCategory('<%=category._id %>', 'unlistCategory')">
                            List
                          </button>
                        <% } %>
                      </td>
                      
                      
                      <td class="text-start">
                        <a href="/admin/editCategory/<%= category._id %>" class="btn btn-info text-white">Edit</a>
                      </td>
                    </tr>\\\\\\
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script>
    function handleFormSubmit(event) {
      event.preventDefault();
      if (!validationForm()) return;

      const name = document.getElementsByName('name')[0].value.trim();
      const description = document.getElementById('descriptionId').value.trim();

      

      fetch('/admin/addCategory', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
      })
      .then(response => response.json())
      .then(() => location.reload())
      .catch(error => alert(error.message));
    }

    function validationForm() {
      if (document.getElementsByName('name')[0].value.trim() === '') {
        alert('Please enter a name');
        return false;
      }
      return true;
    }

    async function toggleCategory(id, action) {
    try {
        console.log(`Sending request to /admin/${action} with id:`, id);

        const response = await fetch(`/admin/${action}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id }) 
        });

        const data = await response.json(); 

        console.log("Response Status:", response.status);
        console.log("Response Data:", data);

        if (response.ok) {
            alert(data.message); 
            location.reload();                                                                                                          
        } else {
            alert("Error: " + data.error);
        }
    } catch (error) {
        console.error("Network or server error:", error);
        alert("Network error: " + error.message);
    }
}

    async function addCategoryOffer(event, categoryId) {
      event.preventDefault();
      const percentage = event.target.percentage.value;

      try {
        const response = await fetch('/admin/addCategoryOffer', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ categoryId, percentage }),
        });

        const data = await response.json();
        if (data.status) {
          alert('Offer added successfully');
          location.reload();
        } else {
          alert(data.message);
        }
      } catch (error) {
        console.error('Error adding offer:', error);
        alert('Failed to add offer');
      }
    }

    async function removeCategoryOffer(categoryId) {
      try {
        const response = await fetch('/admin/removeCategoryOffer', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ categoryId }),
        });

        const data = await response.json();
        if (data.status) {
          alert('Offer removed successfully');
          location.reload();
        } else {
          alert(data.message);
        }
      } catch (error) {
        console.error('Error removing offer:', error);
        alert('Failed to remove offer');
      }
    }
  </script>

<%- include("../../views/partials/admin/footer") %>

