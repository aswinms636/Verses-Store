<%- include("../../views/partials/admin/header") %>

<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
  <style>
    .col-md-3 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .modal-content {
        border-radius: 8px;
    }

    .modal-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .modal-footer {
        background-color: #f8f9fa;
        border-top: 1px solid #dee2e6;
    }

    .form-text {
        color: #6c757d;
        font-size: 0.875rem;
    }

    #offerPercentage::-webkit-inner-spin-button,
    #offerPercentage::-webkit-outer-spin-button {
        opacity: 1;
    }

    .pagination {
      display: flex;
      justify-content: center;
      margin-top: 20px;
    }

    .pagination a {
      margin: 0 5px;
      padding: 5px 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      text-decoration: none;
      color: #007bff;
    }

    .pagination a.active {
      background-color: #007bff;
      color: #fff;
    }

    .pagination a:hover {
      background-color: #0056b3;
      color: #fff;
    }
  </style>
</head>

<body>
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title card-title">Category</h2>
    </div>

    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" onsubmit="handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required />
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create category</button>
              </div>
            </form>
          </div>

          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>Action</th>
                    <th>Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.forEach((category) => { %>
                    <tr>
                      <td class="text-start"><%= category.name %></td>
                      <td class="text-start"><%= category.description %></td>
                      <td>
                        <% if (category.categoryOffer) { %>
                          <%= category.categoryOffer %>%
                        <% } else { %>
                          0%
                        <% } %>
                      </td>
                      <td class="text-start">
                        <button class="btn btn-primary btn-sm"
                                onclick="openOfferModal('<%= category._id %>')">
                          Add Offer
                        </button>
                        <% if (category.categoryOffer) { %>
                          <button class="btn btn-danger btn-sm mt-2"
                                  onclick="removeCategoryOffer('<%= category._id %>')">
                            Remove Offer
                          </button>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <% if(category.isListed) { %>
                          <button class="btn btn-danger" style="width: 70px" onclick="toggleCategory('<%=category._id %>', 'unlistCategory')">
                            Unlist
                          </button>
                        <% } else { %>
                          <button class="btn btn-success" style="width: 70px" onclick="toggleCategory('<%=category._id %>', 'listCategory')">
                            List
                          </button>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <% if (category.isListed) { %>
                          <span class="badge rounded-pill alert-success">Listed</span>
                        <% } else { %>
                          <span class="badge rounded-pill alert-danger">Unlisted</span>
                        <% } %>
                      </td>
                      <td class="text-start">
                        <a href="/admin/editCategory/<%= category._id %>" class="btn btn-info text-white">Edit</a>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>

            <!-- Pagination Controls -->
            <div class="pagination">
              <% if (currentPage > 1) { %>
                <a href="/admin/category?page=<%= currentPage - 1 %>&search=<%= search %>">Previous</a>
              <% } %>

              <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="/admin/category?page=<%= i %>&search=<%= search %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
              <% } %>

              <% if (currentPage < totalPages) { %>
                <a href="/admin/category?page=<%= currentPage + 1 %>&search=<%= search %>">Next</a>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    function handleFormSubmit(event) {
      event.preventDefault();
      if (!validationForm()) return;

      const name = document.getElementsByName('name')[0].value.trim();
      const description = document.getElementById('descriptionId').value.trim();

      fetch('/admin/addCategory', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: data.message,
            timer: 1500,
            showConfirmButton: false
          })
          .then(() => {
            location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message,
          });
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An error occurred while adding the category.',
        });
      });
    }

    function validationForm() {
      if (document.getElementsByName('name')[0].value.trim() === '') {
        alert('Please enter a name');
        return false;
      }
      return true;
    }

    async function toggleCategory(id, action) {
      try {
        console.log(`Sending request to /admin/${action} with id:`, id);

        const response = await fetch(`/admin/${action}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id })
        });

        const data = await response.json();

        console.log("Response Status:", response.status);
        console.log("Response Data:", data);

        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: data.message,
            timer: 1500,
            showConfirmButton: false
          });
          location.reload();
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message,
          });
        }
      } catch (error) {
        console.error("Network or server error:", error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Network error: ' + error.message,
        });
      }
    }

    async function addCategoryOffer(event, categoryId) {
      event.preventDefault();
      const percentage = event.target.percentage.value;

      try {
        const response = await fetch('/admin/addCategoryOffer', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ categoryId, percentage }),
        });

        const data = await response.json();
        if (data.status) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Offer added successfully',
            timer: 1500,
            showConfirmButton: false
          });
          location.reload();
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message,
          });
        }
      } catch (error) {
        console.error('Error adding offer:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to add offer',
        });
      }
    }

    async function removeCategoryOffer(categoryId) {
      try {
        // Show confirmation dialog
        const result = await Swal.fire({
            title: 'Remove Category Offer?',
            text: "This will remove the offer from all products in this category",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'Cancel'
        });

        if (!result.isConfirmed) {
            return;
        }

        // Show loading state
        Swal.fire({
            title: 'Processing...',
            text: 'Removing category offer',
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        const response = await fetch('/admin/removeCategoryOffer', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ categoryId })
        });

        const data = await response.json();

        if (data.status) {
            await Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: data.message,
                timer: 1500,
                showConfirmButton: false
            });
            location.reload();
        } else {
            throw new Error(data.message || 'Failed to remove offer');
        }

      } catch (error) {
        console.error('Error removing offer:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: error.message || 'Something went wrong while removing the offer',
          confirmButtonColor: '#3085d6'
        });
      }
    }

    function openOfferModal(categoryId) {
      document.getElementById('categoryId').value = categoryId;
      document.getElementById('offerPercentage').value = '';
      const modal = new bootstrap.Modal(document.getElementById('addOfferModal'));
      modal.show();
    }

    async function submitOffer() {
      try {
        const categoryId = document.getElementById('categoryId').value;
        const percentage = parseInt(document.getElementById('offerPercentage').value);

        if (isNaN(percentage) || percentage < 0 || percentage > 90) {
          Swal.fire({
            icon: 'error',
            title: 'Invalid Input',
            text: 'Please enter a valid percentage between 0 and 90'
          });
          return;
        }

        // Show loading state
        Swal.fire({
          title: 'Processing...',
          text: 'Adding category offer',
          allowOutsideClick: false,
          didOpen: () => {
            Swal.showLoading();
          }
        });

        const response = await fetch('/admin/addCategoryOffer', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            categoryId,
            percentage
          })
        });

        const data = await response.json();

        // Close the modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('addOfferModal'));
        modal.hide();

        if (data.status) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Offer added successfully',
            showConfirmButton: false,
            timer: 1500
          }).then(() => {
            location.reload();
          });
        } else {
          throw new Error(data.message);
        }

      } catch (error) {
        console.error('Error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: error.message || 'Failed to add offer'
        });
      }
    }
  </script>

  <!-- Replace the existing modal with this updated version -->
  <div class="modal fade" id="addOfferModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add Category Offer</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="offerForm" onsubmit="event.preventDefault(); submitOffer();">
            <input type="hidden" id="categoryId">
            <div class="mb-3">
              <label for="offerPercentage" class="form-label">Offer Percentage</label>
              <input type="number"
                     class="form-control"
                     id="offerPercentage"
                     min="0"
                     max="90"
                     required>
              <div class="form-text">Enter a value between 0 and 90</div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="submit" class="btn btn-primary">Add Offer</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <%- include("../../views/partials/admin/footer") %>
</body>
