<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <style>
        .offer-badge {
            background-color: #28a745;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .offer-price {
            color: #dc3545;
            font-weight: 500;
            text-decoration: line-through;
            font-size: 0.875rem;
        }

        .btn-offer {
            background-color: #17a2b8;
            border-color: #17a2b8;
            color: white;
            transition: all 0.3s;
        }

        .btn-offer:hover {
            background-color: #138496;
            border-color: #117a8b;
        }
    </style>
</head>
<div class="content-header">
    <div>
        <h2 class="content-title card-title">Products</h2>
    </div>
</div>
<header class="card-header text-center mb-20">
    <form action="" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px;">
            <input 
                type="text" 
                class="form-control border-0 rounded-pill" 
                placeholder="Search products or brands" 
                name="search"
                value="<%= locals.search || '' %>"
            >
            <button class="btn border-0" type="submit">Search</button>
        </div>
    </form>
</header>
<div class="right mt-5">
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col"><b>Product name</b></th>
                <th scope="col"><b>Category</b></th>
                <th scope="col"><b>Sale Price</b></th>
                <th scope="col"><b>Offer Price</b></th>
                <th scope="col"><b>Offer</b></th>
                <th scope="col"><b>Quantity</b></th>
                <th scope="col"><b>Action</b></th>
                <th scope="col"><b>Edit</b></th>
            </tr>
        </thead>
        <tbody>
            <% for(let product of data) { %>
            <tr>
                <td><%= product.productName %></td>
                <td><%= product.category.name %></td>
                <td><%= product.salePrice %></td>
                <td>
                    <% if (product.productOffer) { %>
                        <%= product.productOffer %>
                    <% } else { %>
                        0%
                    <% } %>
                </td>
                <td>
                    <% if (product.productOffer === 0) { %>
                    <button class="btn btn-info" onclick="addOffer('<%= product._id %>')" style="width: 100px;">
                        <a href="#" class="text-white">Add Offer</a>
                    </button>
                    <% } else { %>
                    <button class="btn btn-info" onclick="removeOffer('<%= product._id %>')" style="width: 100px;">
                        <a href="#" class="text-white">Remove</a>
                    </button>
                    <% } %>
                </td>
                <td><%= product.quantity %></td>
                <td>
                    <% if(!product.isBlocked){ %>
                    <button class="btn btn-danger" style="width: 80px;">
                        <a href="/admin/blockProduct?id=<%= product._id %>" class="text-white" style="text-decoration: none;">Block</a>
                    </button>
                    <% } else { %>
                    <button class="btn btn-success" style="width: 80px;">
                        <a href="/admin/unblockProduct?id=<%= product._id %>" class="text-white" style="text-decoration: none;">Unblock</a>
                    </button>
                    <% } %>
                </td>
                <td>
                    <button class="btn btn-info" style="width: 80px;">
                        <a href="/admin/editProduct?id=<%= product._id %>" class="text-white" style="text-decoration: none;">Edit</a>
                    </button>
                </td>
            </tr>
            <% } %>
        </tbody>
    </table>
</div>
<div class="container mt-3">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
            <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%=(i === currentPage) ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>&search=<%= locals.search || '' %>"><%= i %></a>
            </li>
            <% } %>
        </ul>
    </nav>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
    async function addOffer(productId) {
        try {
            const { value: percentage } = await Swal.fire({
                title: "Add Product Offer",
                input: "number",
                inputLabel: "Enter offer percentage (1-90)",
                inputPlaceholder: "Enter percentage",
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return "Please enter a percentage!";
                    }
                    if (value <= 0 || value > 90) {
                        return "Offer percentage must be between 1 and 90!";
                    }
                }
            });

            if (!percentage) return; // User cancelled or closed the dialog

            const response = await fetch('/admin/addProductOffer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId, percentage })
            });

            const data = await response.json();

            if (data.status) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Product offer added successfully',
                    timer: 1500,
                    showConfirmButton: false
                });
                location.reload();
            } else {
                throw new Error(data.message);
            }

        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message || 'Failed to add offer'
            });
        }
    }
    async function removeOffer(productId) {
        try {
            const result = await Swal.fire({
                title: "Remove Offer",
                text: "Are you sure you want to remove the offer?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, remove it!"
            });

            if (!result.isConfirmed) return;

            // Show loading state
            Swal.fire({
                title: 'Processing...',
                text: 'Removing product offer',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            const response = await fetch('/admin/removeProductOffer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
            });

            const data = await response.json();

            if (data.status) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Offer removed successfully',
                    timer: 1500,
                    showConfirmButton: false
                });
                location.reload();
            } else {
                throw new Error(data.message || 'Failed to remove offer');
            }

        } catch (error) {
            console.error('Error removing offer:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message || 'Something went wrong while removing the offer',
                confirmButtonColor: '#3085d6'
            });
        }
    }
</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<%- include("../../views/partials/admin/footer") %>
