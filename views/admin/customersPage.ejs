<%- include("../../views/partials/admin/header") %>

<style>
    .search-wrapper {
        max-width: 400px;
        margin-bottom: 20px;
    }

    .input-group {
        display: flex;
        gap: 10px;
    }

    .input-group input {
        border-radius: 4px;
        padding: 8px 12px;
        border: 1px solid #ddd;
    }

    .input-group .btn {
        border-radius: 4px;
    }

    .highlight {
        background-color: #fff3cd;
        transition: background-color 0.3s;
    }
</style>

<div class="content-main">
    <div class="content-header">
        <h2 class="content-title">Customers</h2>

        <!-- Add search bar -->
        <div class="search-wrapper">
            <div class="input-group">
                <input
                    type="text"
                    id="searchInput"
                    class="form-control"
                    placeholder="Search by name, email or phone..."
                    onkeyup="debounceSearch()"
                >
                <button class="btn btn-primary" onclick="handleSearch()">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="customersTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Status</th>
                            <th>Joined</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% users.forEach(user => { %>
                            <tr data-user-id="<%= user._id %>">
                                <td><%= user.name %></td>
                                <td><%= user.email %></td>
                                <td><%= user.mobile %></td>
                                <td>
                                    <span class="badge <%= user.isBlocked ? 'bg-danger' : 'bg-success' %>">
                                        <%= user.isBlocked ? 'Blocked' : 'Active' %>
                                    </span>
                                </td>
                                <td><%= new Date(user.createdAt).toLocaleDateString() %></td>
                                <td>
                                    <button
                                        onclick="confirmToggleUserStatus('<%= user._id %>', <%= user.isBlocked %>, '<%= user.name %>')"
                                        class="btn btn-sm <%= user.isBlocked ? 'btn-success' : 'btn-danger' %>"
                                    >
                                        <%= user.isBlocked ? 'Unblock' : 'Block' %>
                                    </button>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
let debounceTimer;

function debounceSearch() {
    clearTimeout(debounceTimer);
    debounceTimer = setTimeout(handleSearch, 300);
}

function handleSearch() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const tableRows = document.querySelectorAll('#customersTable tbody tr');

    tableRows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
        row.classList.toggle('highlight', searchTerm.length > 0 && text.includes(searchTerm));
    });
}

function confirmToggleUserStatus(userId, isBlocked, userName) {
    Swal.fire({
        title: `Are you sure?`,
        text: `Do you want to ${isBlocked ? 'unblock' : 'block'} ${userName}?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${isBlocked ? 'unblock' : 'block'}!`,
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            toggleUserStatus(userId, isBlocked);
        }
    });
}

async function toggleUserStatus(userId, isBlocked) {
    try {
        const response = await fetch('/admin/toggleUserStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ userId })
        });

        const data = await response.json();


        console.log(data)
        console.log(data.success)

        if (data.success) {
            const row = document.querySelector(`tr[data-user-id="${userId}"]`);
            const statusBadge = row.querySelector('.badge');
            const toggleButton = row.querySelector('button');

            statusBadge.className = `badge ${data.isBlocked ? 'bg-danger' : 'bg-success'}`;
            statusBadge.textContent = data.isBlocked ? 'Blocked' : 'Active';
            toggleButton.className = `btn btn-sm ${data.isBlocked ? 'btn-success' : 'btn-danger'}`;
            toggleButton.textContent = data.isBlocked ? 'Unblock' : 'Block';
            toggleButton.onclick = () => confirmToggleUserStatus(userId, data.isBlocked, row.querySelector('td').textContent);

            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: data.message,
                timer: 1500,
                showConfirmButton: false
            });
        } else {
            throw new Error(data.message || 'Unknown error');
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to update user status'
        });
    }
}
</script>

<%- include("../../views/partials/admin/footer") %>