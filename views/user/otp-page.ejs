<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Verify OTP</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 d-flex align-items-center justify-content-center min-vh-100">
  <div class="bg-white shadow-lg rounded-lg p-4 p-md-5 max-w-xs md:max-w-md w-100 text-center">
    <h2 class="fs-4 fw-bold text-gray-800 mb-3">Verify Your OTP</h2>
    <p class="text-gray-600 mb-3">Enter the 6-digit OTP sent to your email.</p>
    <form id="otpForm" action="/otpVerify" method="post">
        <div class="d-flex justify-content-center gap-2 mb-3">
          <input type="text" name="otp1" maxlength="1" class="otp-input form-control text-center fw-semibold" style="width: 45px; height: 45px;" />
          <input type="text" name="otp2" maxlength="1" class="otp-input form-control text-center fw-semibold" style="width: 45px; height: 45px;" />
          <input type="text" name="otp3" maxlength="1" class="otp-input form-control text-center fw-semibold" style="width: 45px; height: 45px;" />
          <input type="text" name="otp4" maxlength="1" class="otp-input form-control text-center fw-semibold" style="width: 45px; height: 45px;" />
          <input type="text" name="otp5" maxlength="1" class="otp-input form-control text-center fw-semibold" style="width: 45px; height: 45px;" />
          <input type="text" name="otp6" maxlength="1" class="otp-input form-control text-center fw-semibold" style="width: 45px; height: 45px;" />
        </div>
        <!-- Hidden input to hold the combined OTP value -->
        <input type="hidden" name="otp" id="otp" />
        <button type="submit" class="btn btn-primary w-100">Verify OTP</button>
      </form>
      <p class="text-gray-600 mt-3">
        Didnâ€™t receive the code?    
        <button id="resendOtpBtn" class="btn btn-link text-primary p-0" onclick="resendOtp()">Resend OTP</button>
        <span id="resendTimer" class="text-li"></span>
      </p>
  </div>
  
  <script>
    const otpInputs = document.querySelectorAll('.otp-input');
    let timerInterval;
    
    function startTimer(duration = 60) {
        let resendBtn = document.getElementById("resendOtpBtn");
        let timerText = document.getElementById("resendTimer");
        let timeLeft = duration;

        // Clear any existing timer
        if (timerInterval) clearInterval(timerInterval);

        resendBtn.disabled = true;
        timerText.textContent = `(${timeLeft}s)`;

        timerInterval = setInterval(() => {
            timeLeft--;
            timerText.textContent = `(${timeLeft}s)`;

            if (timeLeft <= 0) {
                clearInterval(timerInterval);
                resendBtn.disabled = false;
                timerText.textContent = "";
            }
        }, 1000);
    }

    // Start initial timer
    startTimer();

    otpInputs.forEach((input, index) => {
      input.addEventListener('input', (e) => {
        if (e.target.value.length === e.target.maxLength && index < otpInputs.length - 1) {
          otpInputs[index + 1].focus();
        }
      });

      input.addEventListener('keydown', (e) => {
        if (e.key === 'Backspace' && input.value === '' && index > 0) {
          otpInputs[index - 1].focus();
        }
      });

      input.addEventListener('paste', (e) => {
        e.preventDefault();
        const pasteData = e.clipboardData.getData('text').trim().split('');
        otpInputs.forEach((input, idx) => {
          input.value = pasteData[idx] || '';
        });
        const lastIndex = Math.min(pasteData.length, otpInputs.length) - 1;
        if (lastIndex >= 0) otpInputs[lastIndex].focus();
      });
    });

    document.getElementById('otpForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        let combinedOtp = '';
        otpInputs.forEach(input => combinedOtp += input.value);
        document.getElementById('otp').value = combinedOtp;

        // Validate OTP length
        if (combinedOtp.length !== 6) {
            Swal.fire({
                icon: 'warning',
                title: 'Invalid OTP',
                text: 'Please enter all 6 digits',
                confirmButtonColor: '#3085d6'
            });
            return;
        }

        try {
            const response = await fetch('/otpVerify', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ otp: combinedOtp })
            });

            const data = await response.json();

            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: data.message,
                    timer: 1500,
                    showConfirmButton: false
                });
                window.location.href = '/newPassword';
            } else {
                // Clear OTP inputs
                otpInputs.forEach(input => input.value = '');
                otpInputs[0].focus();

                // Reset timer if specified
                if (data.resetTimer) {
                    startTimer();
                }

                Swal.fire({
                    icon: 'error',
                    title: 'Verification Failed',
                    text: data.message,
                    confirmButtonColor: '#3085d6'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Something went wrong. Please try again.',
                confirmButtonColor: '#3085d6'
            });
        }
    });

    async function resendOtp() {
        try {
            const response = await fetch("/resend-otp", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();

            if (data.success) {
                startTimer();
                Swal.fire({
                    icon: 'success',
                    title: 'OTP Resent!',
                    text: data.message,
                    timer: 2000,
                    showConfirmButton: false
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message,
                    confirmButtonColor: '#3085d6'
                });
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to resend OTP. Please try again.',
                confirmButtonColor: '#3085d6'
            });
        }
    }
</script>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
