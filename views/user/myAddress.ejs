<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Address</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <style>
    /* Main Layout */
    .container-fluid {
      padding: 0;
    }

    /* Sidebar Styles */
    .sidebar {
      min-height: 100vh;
      background-color: #343a40;
      color: white;
      position: fixed;
      width: 260px;
    }

    .sidebar .nav-link {
      color: rgba(255, 255, 255, 0.8);
      padding: 10px 20px;
      margin-bottom: 5px;
      border-radius: 5px;
    }

    .sidebar .nav-link:hover, .sidebar .nav-link.active {
      background-color: rgba(255, 255, 255, 0.1);
      color: white;
    }

    .sidebar .nav-link i {
      margin-right: 10px;
      width: 20px;
    }

    /* Content Area */
    .main-content {
      margin-left: 260px;
      padding: 30px;
      background-color: #f8f9fa;
      min-height: 100vh;
    }

    /* Address Grid */
    .address-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      margin-top: 30px;
    }

    .card {
      border: none;
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      background: white;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    .card p {
      margin-bottom: 8px;
      font-size: 0.95rem;
      color: #333;
    }

    .card strong {
      color: #000;
      font-weight: 600;
      min-width: 100px;
      display: inline-block;
    }

    .card-buttons {
      display: flex;
      gap: 10px;
      margin-top: 15px;
      justify-content: flex-end;
    }

    .btn-edit, .btn-delete {
      padding: 8px 16px;
      font-size: 0.9rem;
      transition: all 0.3s ease;
      border-radius: 6px;
    }

    .btn-edit {
      background-color: #007bff;
      color: white;
    }

    .btn-delete {
      background-color: #dc3545;
      color: white;
    }

    .btn-edit:hover, .btn-delete:hover {
      opacity: 0.9;
      transform: translateY(-2px);
    }

    #addAddressBtn {
      background-color: #000;
      color: white;
      padding: 10px 25px;
      border-radius: 8px;
      font-weight: 500;
      margin-bottom: 20px;
    }

    #addAddressBtn:hover {
      background-color: #333;
      transform: translateY(-2px);
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .sidebar {
        position: relative;
        width: 100%;
        min-height: auto;
      }

      .main-content {
        margin-left: 0;
      }

      .address-grid {
        grid-template-columns: 1fr;
      }

      .card {
        padding: 15px;
      }
    }
  </style>
</head>
<body>
  <div class="container-fluid">
    <div class="row">
      <!-- Sidebar -->
      <div class="col-md-3 col-lg-2 sidebar p-0">
        <div class="d-flex flex-column p-3">
          <div class="text-center mb-4">
            <h4>Account</h4>
          </div>
          <ul class="nav nav-pills flex-column mb-auto">
            <li class="nav-item">
              <a href="/profile" class="nav-link">
                <i class="fas fa-user"></i> Profile
              </a>
            </li>
            <li class="nav-item">
              <a href="/my-address" class="nav-link active">
                <i class="fas fa-map-marker-alt"></i> My Address
              </a>
            </li>
            <li class="nav-item">
              <a href="/my-orders" class="nav-link">
                <i class="fas fa-shopping-bag"></i> My Orders
              </a>
            </li>
            <li class="nav-item">
              <a href="/wallet" class="nav-link">
                <i class="fas fa-envelope"></i> My Wallet
              </a>
            </li>
            <li class="nav-item">
              <a href="/settings" class="nav-link">
                <i class="fas fa-cog"></i> Settings
              </a>
            </li>
            <li class="nav-item mt-5">
              <a href="/logout" class="nav-link text-danger">
                <i class="fas fa-sign-out-alt"></i> Logout
              </a>
            </li>
          </ul>
        </div>
      </div>

      <!-- Main Content -->
      <div class="col-md-9 col-lg-10 main-content">
        <h2 class="mb-4">My Addresses</h2>

        <button id="addAddressBtn" class="btn btn-dark mb-4">
          <i class="fas fa-plus"></i> Add New Address
        </button>

        <div class="address-grid">
          <% if (addresses && addresses.length > 0) { %>
            <% addresses.forEach(userAddress => { %>
              <% userAddress.address.forEach(addr => { %>
                <div class="card"
                    data-id="<%= addr.id %>"
                    data-fullname="<%= addr.fullname %>"
                    data-phone="<%= addr.phone %>"
                    data-street="<%= addr.street %>"
                    data-city="<%= addr.city %>"
                    data-landmark="<%= addr.landmark %>"
                    data-state="<%= addr.state %>"
                    data-zipcode="<%= addr.zipCode %>">

                    <p><strong>Full Name:</strong> <%= addr.fullname %></p>
                    <p><strong>Phone:</strong> <%= addr.phone %></p>
                    <p><strong>Street Addresss :</strong> <%= addr.street %></p>
                    <p><strong>City:</strong> <%= addr.city %></p>
                    <p><strong>State:</strong> <%= addr.state %></p>
                    <p><strong>Zip Code:</strong> <%= addr.zipCode %></p>

                    <div class="card-buttons">
                      <button class="btn-edit">
                        <i class="fas fa-edit"></i> Edit
                      </button>
                      <button class="btn-delete">
                        <i class="fas fa-trash"></i> Delete
                      </button>
                    </div>
                </div>
              <% }) %>
            <% }) %>
          <% } else { %>
            <div class="text-center p-5">
              <i class="fas fa-map-marker-alt fa-3x text-muted mb-3"></i>
              <p class="lead">No addresses found. Add your first address!</p>
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Address Modal -->
<div id="addAddressModal" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add Address</h5>
        <button type="button" class="close" data-dismiss="modal">×</button>
      </div>
      <div class="modal-body">
        <form id="addressForm">
          <div class="form-group">
            <label>Full Name</label>
            <input type="text" class="form-control" id="fullName">
          </div>
          <div class="form-group">
            <label>Phone</label>
            <input type="text" class="form-control" id="phone">
          </div>
          <div class="form-group">
            <label>Street  Address</label>
            <input type="text" class="form-control" id="street">
          </div>
          <div class="form-group">
            <label>City</label>
            <input type="text" class="form-control" id="city">
          </div>
          <div class="form-group">
            <label>Landmark</label>
            <input type="text" class="form-control" id="landmark">
          </div>
          <div class="form-group">
            <label>State</label>
            <input type="text" class="form-control" id="state">
          </div>
          <div class="form-group">
            <label>Zip Code</label>
            <input type="text" class="form-control" id="zipCode">
          </div>
          <button type="submit" class="btn btn-success btn-block">Save Address</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Edit Address Modal -->
<div id="editAddressModal" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Edit Address</h5>
        <button type="button" class="close" data-dismiss="modal">×</button>
      </div>
      <div class="modal-body">
        <form id="editAddressForm">
          <input type="hidden" id="editAddressId">
          <div class="form-group">
            <label>Full Name</label>
            <input type="text" class="form-control" id="editFullName">
          </div>
          <div class="form-group">
            <label>Phone</label>
            <input type="text" class="form-control" id="editPhone">
          </div>
          <div class="form-group">
            <label>Street Address</label>
            <input type="text" class="form-control" id="editStreet">
          </div>
          <div class="form-group">
            <label>City</label>
            <input type="text" class="form-control" id="editCity">
          </div>
          <div class="form-group">
            <label>Landmark</label>
            <input type="text" class="form-control" id="editLandmark">
          </div>
          <div class="form-group">
            <label>State</label>
            <input type="text" class="form-control" id="editState">
          </div>
          <div class="form-group">
            <label>Zip Code</label>
            <input type="text" class="form-control" id="editZipCode">
          </div>
          <button type="submit" class="btn btn-success btn-block">Update Address</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
  document.getElementById('addAddressBtn').addEventListener('click', function () {
    $('#addAddressModal').modal('show');
  });

  document.getElementById('addressForm').addEventListener('submit', async function (event) {
    event.preventDefault();

    const addressData = {
      fullname: document.getElementById('fullName').value,
      phone: document.getElementById('phone').value,
      street: document.getElementById('street').value,
      city: document.getElementById('city').value,
      landmark: document.getElementById('landmark').value,
      state: document.getElementById('state').value,
      zipCode: document.getElementById('zipCode').value
    };

    try {
      const response = await fetch('/add-address', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(addressData)
      });
      const result = await response.json();

      if (result.success) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Address added successfully!'
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Failed to add address!'
        });
      }
    } catch (error) {
      console.error('Error:', error);
    }
  });

  document.addEventListener('DOMContentLoaded', function () {
    const editButtons = document.querySelectorAll('.btn-edit');
    const deleteButtons = document.querySelectorAll('.btn-delete');

    editButtons.forEach(button => {
      button.addEventListener('click', function () {
        const card = button.closest('.card');
        document.getElementById('editAddressId').value = card.getAttribute('data-id');
        document.getElementById('editFullName').value = card.getAttribute('data-fullname');
        document.getElementById('editPhone').value = card.getAttribute('data-phone');
        document.getElementById('editStreet').value = card.getAttribute('data-street');
        document.getElementById('editCity').value = card.getAttribute('data-city');
        document.getElementById('editLandmark').value = card.getAttribute('data-landmark');
        document.getElementById('editState').value = card.getAttribute('data-state');
        document.getElementById('editZipCode').value = card.getAttribute('data-zipcode');

        $('#editAddressModal').modal('show');
      });
    });

    deleteButtons.forEach(button => {
      button.addEventListener('click', async function () {
        const card = button.closest('.card');
        const addressId = card.getAttribute('data-id');

        Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!'
        }).then(async (result) => {
          if (result.isConfirmed) {
            try {
              const response = await fetch(`/delete-address`, {
                method: 'post',
                headers: { 'Content-Type': 'application/json' },
                body:JSON.stringify({ addressId })
              });
              const result = await response.json();

              if (result.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Success',
                  text: 'Address deleted successfully!'
                }).then(() => {
                  location.reload();
                });
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: result.message || 'Failed to delete address!'
                });
              }
            } catch (error) {
              console.error('Error:', error);
            }
          }
        });
      });
    });

    document.getElementById('editAddressForm').addEventListener('submit', async function (event) {
      event.preventDefault();

      const addressData = {
        id: document.getElementById('editAddressId').value,
        fullname: document.getElementById('editFullName').value,
        phone: document.getElementById('editPhone').value,
        street: document.getElementById('editStreet').value,
        city: document.getElementById('editCity').value,
        state: document.getElementById('editState').value,
        zipCode: document.getElementById('editZipCode').value,
        landmark: document.getElementById('editLandmark').value,
      };

      try {
        const response = await fetch('/edit-address', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(addressData)
        });

        const result = await response.json();

        if (result.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Address updated successfully!'
          }).then(() => {
            location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: result.message || 'Failed to update address!'
          });
        }
      } catch (error) {
        console.error('Error:', error);
      }
    });
  });
</script>
</body>
</html>
