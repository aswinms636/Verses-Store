<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        :root {
            --primary-color: #4f46e5;
            --primary-hover: #4338ca;
            --error-color: #ef4444;
            --success-color: #10b981;
            --bg-color: #f9fafb;
            --card-bg: #ffffff;
            --text-color: #1f2937;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            width: 100%;
            max-width: 400px;
            padding: 30px;
            background-color: var(--card-bg);
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05), 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .form-header {
            text-align: center;
            margin-bottom: 24px;
        }

        .form-header h1 {
            font-size: 1.5rem;
            font-weight: 600;
            color: #111827;
            margin-bottom: 8px;
        }

        .form-header p {
            color: #6b7280;
            font-size: 0.875rem;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 6px;
            font-size: 0.875rem;
            font-weight: 500;
            color: #374151;
        }

        .form-input {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-size: 1rem;
            transition: border-color 0.15s ease;
        }

        .form-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .password-strength {
            height: 4px;
            width: 100%;
            background: #e5e7eb;
            margin-top: 8px;
            border-radius: 2px;
            position: relative;
            overflow: hidden;
        }

        .password-strength-meter {
            height: 100%;
            width: 0%;
            transition: width 0.3s ease, background-color 0.3s ease;
        }

        .password-feedback {
            font-size: 0.75rem;
            margin-top: 4px;
            color: #6b7280;
        }

        .submit-btn {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.15s ease;
        }

        .submit-btn:hover {
            background-color: var(--primary-hover);
        }

        .submit-btn:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.4);
        }

        .password-requirements {
            margin-top: 24px;
            padding: 12px;
            background-color: #f3f4f6;
            border-radius: 6px;
        }

        .password-requirements h3 {
            font-size: 0.875rem;
            font-weight: 500;
            margin-bottom: 8px;
            color: #4b5563;
        }

        .requirements-list {
            list-style-type: none;
            font-size: 0.75rem;
            color: #6b7280;
        }

        .requirements-list li {
            margin-bottom: 4px;
            display: flex;
            align-items: center;
        }

        .requirements-list li::before {
            content: "•";
            margin-right: 6px;
            color: #9ca3af;
        }

        .requirements-list li.valid::before {
            content: "✓";
            color: var(--success-color);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="form-header">
            <h1>Change Your Password</h1>
            <p>Please enter and confirm your new password</p>
        </div>
        
        <form id="changePasswordForm">
            <div class="form-group">
                <label for="password" class="form-label">New Password</label>
                <input 
                    type="password" 
                    id="password" 
                    class="form-input" 
                    placeholder="Enter new password" 
                    required
                >
                <div class="password-strength">
                    <div class="password-strength-meter" id="passwordStrengthMeter"></div>
                </div>
                <div class="password-feedback" id="passwordFeedback">Password strength will be shown here</div>
            </div>
            
            <div class="form-group">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <input 
                    type="password" 
                    id="confirmPassword" 
                    class="form-input" 
                    placeholder="Confirm your new password" 
                    required
                >
            </div>
            
            <button type="submit" class="submit-btn">Update Password</button>
            
            <div class="password-requirements">
                <h3>Password Requirements:</h3>
                <ul class="requirements-list">
                    <li id="req-length">At least 8 characters long</li>
                    <li id="req-uppercase">Contains uppercase letter</li>
                    <li id="req-lowercase">Contains lowercase letter</li>
                    <li id="req-number">Contains number</li>
                    <li id="req-special">Contains special character</li>
                </ul>
            </div>
        </form>
    </div>

    <script>
        // Password strength checker
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');
        const strengthMeter = document.getElementById('passwordStrengthMeter');
        const passwordFeedback = document.getElementById('passwordFeedback');
        
        // Password requirement elements
        const reqLength = document.getElementById('req-length');
        const reqUppercase = document.getElementById('req-uppercase');
        const reqLowercase = document.getElementById('req-lowercase');
        const reqNumber = document.getElementById('req-number');
        const reqSpecial = document.getElementById('req-special');
        
        password.addEventListener('input', checkPasswordStrength);
        
        function checkPasswordStrength() {
            const value = password.value;
            let strength = 0;
            
            // Reset requirement classes
            reqLength.className = '';
            reqUppercase.className = '';
            reqLowercase.className = '';
            reqNumber.className = '';
            reqSpecial.className = '';
            
            // Check length
            if (value.length >= 8) {
                strength += 20;
                reqLength.className = 'valid';
            }
            
            // Check for uppercase letters
            if (/[A-Z]/.test(value)) {
                strength += 20;
                reqUppercase.className = 'valid';
            }
            
            // Check for lowercase letters
            if (/[a-z]/.test(value)) {
                strength += 20;
                reqLowercase.className = 'valid';
            }
            
            // Check for numbers
            if (/[0-9]/.test(value)) {
                strength += 20;
                reqNumber.className = 'valid';
            }
            
            // Check for special characters
            if (/[^A-Za-z0-9]/.test(value)) {
                strength += 20;
                reqSpecial.className = 'valid';
            }
            
            // Update strength meter
            strengthMeter.style.width = strength + '%';
            
            // Update color and feedback based on strength
            if (strength <= 20) {
                strengthMeter.style.backgroundColor = '#ef4444'; // Red
                passwordFeedback.textContent = 'Very Weak';
                passwordFeedback.style.color = '#ef4444';
            } else if (strength <= 40) {
                strengthMeter.style.backgroundColor = '#f97316'; // Orange
                passwordFeedback.textContent = 'Weak';
                passwordFeedback.style.color = '#f97316';
            } else if (strength <= 60) {
                strengthMeter.style.backgroundColor = '#eab308'; // Yellow
                passwordFeedback.textContent = 'Fair';
                passwordFeedback.style.color = '#eab308';
            } else if (strength <= 80) {
                strengthMeter.style.backgroundColor = '#22c55e'; // Green
                passwordFeedback.textContent = 'Good';
                passwordFeedback.style.color = '#22c55e';
            } else {
                strengthMeter.style.backgroundColor = '#10b981'; // Teal
                passwordFeedback.textContent = 'Strong';
                passwordFeedback.style.color = '#10b981';
            }
        }

        // Original form submission logic
        document.getElementById('changePasswordForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            // Frontend validation
            if (password === '' || confirmPassword === '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Both fields are required',
                });
                return;
            }
            if (password !== confirmPassword) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Passwords do not match',
                });
                return;
            }
            // Send request to backend
            const response = await fetch('/changePassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ password, confirmPassword }),
            });
            const data = await response.json();
            if (response.ok) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: data.message,
                }).then(() => {
                    window.location.href = '/signin';
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message,
                });
            }
        });
    </script>
</body>
</html>